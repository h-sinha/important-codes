{
    "Default contents of C++ file": {
        "prefix": "cppdefault",
        "body": [
            "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\n#define DEBUG\n#ifdef DEBUG\n#define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)\n\ttemplate <typename Arg1>\n\tvoid __f(const char* name, Arg1&& arg1){\n\t\tcerr << name << \" : \" << arg1 << std::endl;\n\t}\n\ttemplate <typename Arg1, typename... Args>\n\tvoid __f(const char* names, Arg1&& arg1, Args&&... args){\n\t\tconst char* comma = strchr(names + 1, ','); cerr.write(names, comma - names) << \" : \" << arg1<<\" | \";__f(comma+1, args...);\n\t}\n#else\n#define debug(...)\n#endif\n#define FOR(i,a,b) \tfor(int i=a;i<b;++i)\n#define RFOR(i,a,b) \tfor(int i=a;i>=b;--i)\n#define ln \t\t\"\\n\"\n#define mp make_pair\n#define pb push_back\n#define sz(a)\tll(a.size())\n#define F first\n#define S second\n#define all(c)\tc.begin(),c.end()\n#define rall(c) c.rbegin(), c.rend()\n#define trace(c,x) for(auto &x:c)\n#define pii pair<ll,ll>\n#define init(a, x) memset(a,x,sizeof(a))\ntypedef long long ll;\ntypedef long double ld;\ntypedef\tpriority_queue<pii,std::vector<pii>,greater<pii> > revpr;\n\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> pbds;\n// ordered_set X\n//K-th smallest\n//*X.find_by_order(k-1)\n//NO OF ELEMENTS < A\n//X.order_of_key(A)\nconst int L=1e6+7;\nmap<ll,ll> counter;\nll fastexpo(ll x,ll y,ll m)\n{\n\tll temp=1;\n\twhile(y>0)\n\t{\n\t\tif(y&1)temp = ((temp%m)*(x%m))%m;\n\t\tx = ((x%m)*(x%m))%m;\n\t\ty>>=1;\n\t}return temp;\n}\nvoid fff()\n{\n\t$0\n}\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout.tie(NULL);\n\t//int t;cin >> t;while(t--)\n\tfff();\n\treturn 0;\n}"
        ],
        "description": "Default contents of a C++ file"
    },
    "Depth first search":{
        "prefix": "dfs",
        "body":["void dfs(int vertex, int parent = -1)\n{\n    trace(${1:v}[vertex], x)\n    {\n        if(x != parent)\n        {\n            dfs(x, vertex);\n            $0\n        }\n    }\n}"],
        "description": "DFS"
    },
    "Breadth first search":{
        "prefix":"bfs",
        "body":["int bfs(int s, int n)\n{\n    vector<int>d(n+1, INT_MAX);\n    queue<int>q;\n    q.push(s);\n    d[s] = 0;\n    int cur;\n    while(!q.empty())\n    {\n        cur = q.front();\n        q.pop();\n        trace(${1:v}[cur], x)\n        {\n            if(d[x]>d[cur] + 1)\n            {\n                d[x] = d[cur] + 1;\n                q.push(x);\n            }\n        }\n    }\n    return d[n$0];\n}"],
        "description": "BFS"
    },
    "Prefix Sum":{
        "prefix": "prefix",
        "body":["vector<${1:ll}> dp(${2:n+1});",
            "dp[0] = ${3:a}[0];",
            "FOR(i,1,${2}){",
            "    dp[i] = (dp[i - 1] + ${3}[i]);",
            "}"],
        "description": "Prefix Sum"
    },
    "Suffix Sum":{
        "prefix": "suffix",
        "body":["vector<${1:ll}> dp(n+1);",
            "dp[n-1] = ${2:a}[n-1];",
            "RFOR(i,n-2,0){",
            "    dp[i] = (dp[i + 1] + ${2}[i]);",
            "}"],
        "description": "Prefix Sum"
    }
}